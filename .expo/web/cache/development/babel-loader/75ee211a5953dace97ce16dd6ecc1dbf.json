{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\matem\\\\Desktop\\\\login\\\\src\\\\screens\\\\Dashboard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { List, Divider } from 'react-native-paper';\nimport firebase from 'firebase';\nimport Loading from \"../components/Loading\";\nimport useStatsBar from \"../components/useStatusBar\";\nimport 'firebase/firestore';\nexport default function HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  useStatsBar('light-content');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      threads = _useState2[0],\n      setThreads = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('THREADS').orderBy('latestMessage.createdAt', 'desc').onSnapshot(function (querySnapshot) {\n      var threads = querySnapshot.docs.map(function (documentSnapshot) {\n        return _objectSpread({\n          _id: documentSnapshot.id,\n          name: '',\n          latestMessage: {\n            text: ''\n          }\n        }, documentSnapshot.data());\n      });\n      setThreads(threads);\n\n      if (loading) {\n        setLoading(false);\n      }\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: threads,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Divider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 39\n        }\n      });\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('chat', {\n            thread: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, React.createElement(List.Item, {\n        title: item.name,\n        description: item.latestMessage.text,\n        titleNumberOfLines: 1,\n        titleStyle: styles.listTitle,\n        descriptionStyle: styles.listDescription,\n        descriptionNumberOfLines: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f5f5f5',\n    flex: 1\n  },\n  listTitle: {\n    fontSize: 22\n  },\n  listDescription: {\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/matem/Desktop/login/src/screens/Dashboard.js"],"names":["React","useState","useEffect","List","Divider","firebase","Loading","useStatsBar","HomeScreen","navigation","threads","setThreads","loading","setLoading","unsubscribe","firestore","collection","orderBy","onSnapshot","querySnapshot","docs","map","documentSnapshot","_id","id","name","latestMessage","text","data","styles","container","item","navigate","thread","listTitle","listDescription","StyleSheet","create","backgroundColor","flex","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, FlatList, TouchableOpacity } from 'react-native';\nimport { List, Divider } from 'react-native-paper';\nimport firebase from 'firebase';\nimport Loading from '../components/Loading';\nimport useStatsBar from '../components/useStatusBar';\nimport 'firebase/firestore'\n\nexport default function HomeScreen({ navigation }) {\n  useStatsBar('light-content');\n\n  const [threads, setThreads] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  /**\n   * Fetch threads from Firestore\n   */\n  useEffect(() => {\n    const unsubscribe = firebase.firestore()\n      .collection('THREADS')\n      .orderBy('latestMessage.createdAt', 'desc')\n      .onSnapshot(querySnapshot => {\n        const threads = querySnapshot.docs.map(documentSnapshot => {\n          return {\n            _id: documentSnapshot.id,\n            // give defaults\n            name: '',\n\n            latestMessage: {\n              text: ''\n            },\n            ...documentSnapshot.data()\n          };\n        });\n\n        setThreads(threads);\n\n        if (loading) {\n          setLoading(false);\n        }\n      });\n\n    /**\n     * unsubscribe listener\n     */\n    return () => unsubscribe();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={threads}\n        keyExtractor={item => item._id}\n        ItemSeparatorComponent={() => <Divider />}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            onPress={() => navigation.navigate('chat', { thread: item })}\n          >\n            <List.Item\n              title={item.name}\n              description={item.latestMessage.text}\n              titleNumberOfLines={1}\n              titleStyle={styles.listTitle}\n              descriptionStyle={styles.listDescription}\n              descriptionNumberOfLines={1}\n            />\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f5f5f5',\n    flex: 1\n  },\n  listTitle: {\n    fontSize: 22\n  },\n  listDescription: {\n    fontSize: 16\n  }\n});"]},"metadata":{},"sourceType":"module"}