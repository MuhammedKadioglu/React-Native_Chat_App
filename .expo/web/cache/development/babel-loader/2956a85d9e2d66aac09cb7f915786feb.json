{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport * as Facebook from 'expo-facebook';\nimport uuid from 'uuid';\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCgomg2cFIcBKeWYzvzEt_RRXACA7Ow6hI\",\n  authDomain: \"android-b0813.firebaseapp.com\",\n  databaseURL: \"https://android-b0813-default-rtdb.firebaseio.com\",\n  projectId: \"android-b0813\",\n  storageBucket: \"android-b0813.appspot.com\",\n  messagingSenderId: \"246058769113\",\n  appId: \"1:246058769113:web:38de67b45bbe16d503fcc8\",\n  measurementId: \"G-E7GB2RTY0J\",\n  facebookAppId: \"470526873952355\"\n});\nexport var logoutUser = function logoutUser() {\n  firebase.auth().signOut();\n};\nexport var signInUser = function signInUser(_ref) {\n  var name, email, password, user;\n  return _regeneratorRuntime.async(function signInUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          name = _ref.name, email = _ref.email, password = _ref.password;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n        case 4:\n          user = _context.sent;\n          firebase.auth().currentUser.updateProfile({\n            displayName: name\n          });\n          return _context.abrupt(\"return\", {\n            user: user\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", {\n            error: _context.t0.message\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var loginUser = function loginUser(_ref2) {\n  var email, password, user;\n  return _regeneratorRuntime.async(function loginUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          email = _ref2.email, password = _ref2.password;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n        case 4:\n          user = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            user: user\n          });\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          return _context2.abrupt(\"return\", {\n            error: _context2.t0.message\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var loginFacebook = function loginFacebook() {\n  var _await$Facebook$logIn, type, token, credential;\n\n  return _regeneratorRuntime.async(function loginFacebook$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(Facebook.initializeAsync(facebookAppId));\n\n        case 2:\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n            permissions: ['public_profile', 'email']\n          }));\n\n        case 4:\n          _await$Facebook$logIn = _context3.sent;\n          type = _await$Facebook$logIn.type;\n          token = _await$Facebook$logIn.token;\n\n          if (type == 'success') {\n            credential = firebase.auth.FacebookAuthProvider.credential(token);\n            firebase.auth().signInWithCredential(credential).catch(function (error) {\n              console.log(error);\n            });\n          }\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var sendEmailWithPassword = function sendEmailWithPassword(email) {\n  return _regeneratorRuntime.async(function sendEmailWithPassword$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().sendPasswordResetEmail(email));\n\n        case 3:\n          return _context4.abrupt(\"return\", {});\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", {\n            error: _context4.t0.message\n          });\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar Backend = function () {\n  function Backend() {\n    var _this = this;\n\n    _classCallCheck(this, Backend);\n\n    this.uid = \"\";\n    this.messagesRef = null;\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        _this.setUid(user.uid);\n      } else {\n        firebase.auth().signInAnonymously().catch(function (error) {\n          alert(error.message);\n        });\n      }\n    });\n  }\n\n  _createClass(Backend, [{\n    key: \"setUid\",\n    value: function setUid(value) {\n      this.uid = value;\n    }\n  }, {\n    key: \"getUid\",\n    value: function getUid() {\n      return this.uid;\n    }\n  }, {\n    key: \"loadMessages\",\n    value: function loadMessages(callback) {\n      this.messagesRef = firebase.database().ref(\"messages\");\n      this.messagesRef.off();\n\n      var onReceive = function onReceive(data) {\n        var message = data.val();\n        callback({\n          _id: data.key,\n          text: message.text,\n          createdAt: message.createdAt,\n          user: {\n            _id: message.user._id,\n            name: message.user.name\n          }\n        });\n      };\n\n      var d = this.getLimit();\n      console.log(d);\n      this.messagesRef.orderByChild(\"createdAt\").on(\"child_added\", onReceive);\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(message) {\n      var today = new Date();\n      var timestamp = today.toISOString();\n\n      for (var i = 0; i < message.length; i++) {\n        this.messagesRef.push({\n          text: message[i].text,\n          user: message[i].user,\n          createdAt: timestamp\n        });\n      }\n    }\n  }, {\n    key: \"closeChat\",\n    value: function closeChat() {\n      if (this.messagesRef) {\n        this.messagesRef.off();\n      }\n    }\n  }, {\n    key: \"getLimit\",\n    value: function getLimit() {\n      var today = new Date();\n      today.setDate(today.getDate() - 31);\n      var changedISODate = new Date(today).toISOString();\n      console.log(changedISODate);\n      return changedISODate;\n    }\n  }]);\n\n  return Backend;\n}();\n\nexport default new Backend();","map":{"version":3,"sources":["C:/Users/matem/Desktop/login/src/api/auth-api.js"],"names":["firebase","Facebook","uuid","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","facebookAppId","logoutUser","auth","signOut","signInUser","name","email","password","createUserWithEmailAndPassword","user","currentUser","updateProfile","displayName","error","message","loginUser","signInWithEmailAndPassword","loginFacebook","initializeAsync","logInWithReadPermissionsAsync","permissions","type","token","credential","FacebookAuthProvider","signInWithCredential","catch","console","log","sendEmailWithPassword","sendPasswordResetEmail","Backend","uid","messagesRef","onAuthStateChanged","setUid","signInAnonymously","alert","value","callback","database","ref","off","onReceive","data","val","_id","key","text","createdAt","d","getLimit","orderByChild","on","today","Date","timestamp","toISOString","i","length","push","setDate","getDate","changedISODate"],"mappings":"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","sourcesContent":["import firebase from 'firebase'\nimport 'firebase/auth'\n\nimport * as Facebook from 'expo-facebook';\nimport uuid from 'uuid';\n\n\nfirebase.initializeApp({\n      apiKey: \"AIzaSyCgomg2cFIcBKeWYzvzEt_RRXACA7Ow6hI\",\n    authDomain: \"android-b0813.firebaseapp.com\",\n    databaseURL: \"https://android-b0813-default-rtdb.firebaseio.com\",\n    projectId: \"android-b0813\",\n    storageBucket: \"android-b0813.appspot.com\",\n    messagingSenderId: \"246058769113\",\n    appId: \"1:246058769113:web:38de67b45bbe16d503fcc8\",\n    measurementId: \"G-E7GB2RTY0J\",\n    facebookAppId: \"470526873952355\",\n    });\nexport const logoutUser = () => {\n  firebase.auth().signOut()\n}\n\nexport const signInUser = async ({ name, email, password }) => {\n  try {\n    const user = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n    firebase.auth().currentUser.updateProfile({\n      displayName: name,\n    })\n    return { user }\n  } catch (error) {\n    return {\n      error: error.message,\n    }\n  }\n}\n\nexport const loginUser = async ({ email, password }) => {\n  try {\n    const user = await firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n    return { user }\n  } catch (error) {\n    return {\n      error: error.message,\n    }\n  }\n}\nexport const loginFacebook = async () => {\n  \n    \n    await Facebook.initializeAsync(facebookAppId);\n    \n    const { type, token } = await Facebook.logInWithReadPermissionsAsync(\n          { permissions:['public_profile', 'email'] },\n        );\n        if (type == 'success') {\n  \n          const credential = firebase.auth.FacebookAuthProvider.credential(token)\n    \n          firebase.auth().signInWithCredential(credential).catch((error) => {\n            console.log(error)\n          })\n        }\n    \n}\n\n\nexport const sendEmailWithPassword = async (email) => {\n  try {\n    await firebase.auth().sendPasswordResetEmail(email)\n    return {}\n  } catch (error) {\n    return {\n      error: error.message,\n    }\n  }\n}\nclass Backend {\n  uid = \"\";\n  messagesRef = null;\n  // initialize Firebase Backend\n  constructor(){\n  firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setUid(user.uid);\n      } else {\n        firebase\n          .auth()\n          .signInAnonymously()\n          .catch(error => {\n            alert(error.message);\n          });\n      }\n    });\n}\n  setUid(value) {\n    this.uid = value;\n  }\n  getUid() {\n    return this.uid;\n  }\n  // retrieve the messages from the Backend\n  loadMessages(callback) {\n    this.messagesRef = firebase.database().ref(\"messages\");\n    this.messagesRef.off(); //Detaches a callback previously attached with on()\n    const onReceive = data => {\n      const message = data.val();\n      callback({\n        _id: data.key,\n        text: message.text,\n        //createdAt: new Date(message.createdAt),\n        createdAt: message.createdAt,\n        user: {\n          _id: message.user._id,\n          name: message.user.name\n        }\n      });\n    };\n\n    var d = this.getLimit();\n    console.log(d);\n    //Generates a new Query object limited to the last specific number of children.\n    //this.messagesRef.limitToLast(10).on(\"child_added\", onReceive);\n    this.messagesRef\n      .orderByChild(\"createdAt\")\n      //.startAt(d)\n      //.endAt(\"2017-11-27T06:51:47.851Z\")\n      .on(\"child_added\", onReceive);\n  }\n  // send the message to the Backend\n  sendMessage(message) {\n    //console.log(new Date(firebase.database.ServerValue.TIMESTAMP));\n    var today = new Date();\n    /* today.setDate(today.getDate() - 30);\n    var timestamp = new Date(today).toISOString(); */\n    var timestamp = today.toISOString();\n    for (let i = 0; i < message.length; i++) {\n      this.messagesRef.push({\n        text: message[i].text,\n        user: message[i].user,\n        createdAt: timestamp\n      });\n    }\n  }\n  // close the connection to the Backend\n  closeChat() {\n    if (this.messagesRef) {\n      this.messagesRef.off();\n    }\n  }\n\n  getLimit() {\n    var today = new Date();\n    //var milliseconds = Date.parse(today);\n    //var changed = milliseconds - 86400000; //10 minutes (- 900000) -  86400000 1 day\n    today.setDate(today.getDate() - 31); // last 30 Days\n    //console.log(today);\n    var changedISODate = new Date(today).toISOString();\n    //var changedISODate = today.toISOString();\n    console.log(changedISODate);\n    return changedISODate;\n  }\n}\n\nexport default new Backend();"]},"metadata":{},"sourceType":"module"}