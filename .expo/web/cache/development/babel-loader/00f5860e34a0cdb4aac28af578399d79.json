{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\matem\\\\Desktop\\\\login\\\\src\\\\screens\\\\RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { signInUser } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError, emailError, passwordError, response;\n    return _regeneratorRuntime.async(function onSignUpPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            nameError = nameValidator(name.value);\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            if (!(emailError || passwordError || nameError)) {\n              _context.next = 8;\n              break;\n            }\n\n            setName(_objectSpread(_objectSpread({}, name), {}, {\n              error: nameError\n            }));\n            setEmail(_objectSpread(_objectSpread({}, email), {}, {\n              error: emailError\n            }));\n            setPassword(_objectSpread(_objectSpread({}, password), {}, {\n              error: passwordError\n            }));\n            return _context.abrupt(\"return\");\n\n          case 8:\n            setLoading(true);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(signInUser({\n              name: name.value,\n              email: email.value,\n              password: password.value\n            }));\n\n          case 11:\n            response = _context.sent;\n\n            if (response.error) {\n              setError(response.error);\n            }\n\n            setLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Hesap Olu\\u015Ftur\"), React.createElement(TextInput, {\n    label: \"\\u0130sim Soyisim\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"\\u015Eifre\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    loading: loading,\n    mode: \"contained\",\n    onPress: onSignUpPressed,\n    style: {\n      marginTop: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Kay\\u0131t Ol\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Hesab\\u0131n\\u0131z var m\\u0131? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Giri\\u015F Yap\"))), React.createElement(Toast, {\n    message: error,\n    onDismiss: function onDismiss() {\n      return setError('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/matem/Desktop/login/src/screens/RegisterScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","signInUser","Toast","RegisterScreen","navigation","value","error","name","setName","email","setEmail","password","setPassword","loading","setLoading","setError","onSignUpPressed","nameError","emailError","passwordError","response","goBack","text","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { nameValidator } from '../helpers/nameValidator'\nimport { signInUser } from '../api/auth-api'\nimport Toast from '../components/Toast'\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState({ value: '', error: '' })\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n  const [loading, setLoading] = useState()\n  const [error, setError] = useState()\n\n  const onSignUpPressed = async () => {\n    const nameError = nameValidator(name.value)\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError || nameError) {\n      setName({ ...name, error: nameError })\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n    setLoading(true)\n    const response = await signInUser({\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    })\n    if (response.error) {\n      setError(response.error)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Hesap Oluştur</Header>\n      <TextInput\n        label=\"İsim Soyisim\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={(text) => setName({ value: text, error: '' })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Şifre\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <Button\n        loading={loading}\n        mode=\"contained\"\n        onPress={onSignUpPressed}\n        style={{ marginTop: 24 }}\n      >\n        Kayıt Ol\n      </Button>\n      <View style={styles.row}>\n        <Text>Hesabınız var mı? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\n          <Text style={styles.link}>Giriş Yap</Text>\n        </TouchableOpacity>\n      </View>\n      <Toast message={error} onDismiss={() => setError('')} />\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n\nexport default RegisterScreen\n"]},"metadata":{},"sourceType":"module"}