{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\matem\\\\Desktop\\\\login\\\\src\\\\components\\\\TextInput.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput as Input } from 'react-native-paper';\nimport { theme } from \"../core/theme\";\n\nvar TextInput = function TextInput(_ref) {\n  var errorText = _ref.errorText,\n      description = _ref.description,\n      props = _objectWithoutProperties(_ref, [\"errorText\", \"description\"]);\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, React.createElement(Input, _extends({\n    style: styles.input,\n    selectionColor: theme.colors.primary,\n    underlineColor: \"transparent\",\n    mode: \"outlined\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  })), description && !errorText ? React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, description) : null, errorText ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }\n  }, errorText) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12\n  },\n  input: {\n    backgroundColor: theme.colors.surface\n  },\n  description: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n    paddingTop: 8\n  },\n  error: {\n    fontSize: 13,\n    color: theme.colors.error,\n    paddingTop: 8\n  }\n});\nexport default TextInput;","map":{"version":3,"sources":["C:/Users/matem/Desktop/login/src/components/TextInput.js"],"names":["React","TextInput","Input","theme","errorText","description","props","styles","container","input","colors","primary","error","StyleSheet","create","width","marginVertical","backgroundColor","surface","fontSize","color","secondary","paddingTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,KAAT;;AAEA,IAAMF,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGG,SAAH,QAAGA,SAAH;AAAA,MAAcC,WAAd,QAAcA,WAAd;AAAA,MAA8BC,KAA9B;;AAAA,SAChB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,IAAA,cAAc,EAAEN,KAAK,CAACO,MAAN,CAAaC,OAF/B;AAGE,IAAA,cAAc,EAAC,aAHjB;AAIE,IAAA,IAAI,EAAC;AAJP,KAKML,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQGD,WAAW,IAAI,CAACD,SAAhB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACF,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,WAAlC,CADD,GAEG,IAVN,EAWGD,SAAS,GAAG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,SAA5B,CAAH,GAAmD,IAX/D,CADgB;AAAA,CAAlB;;AAgBA,IAAMG,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAK/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,eAAe,EAAEd,KAAK,CAACO,MAAN,CAAaQ;AADzB,GALwB;AAQ/Bb,EAAAA,WAAW,EAAE;AACXc,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,KAAK,EAAEjB,KAAK,CAACO,MAAN,CAAaW,SAFT;AAGXC,IAAAA,UAAU,EAAE;AAHD,GARkB;AAa/BV,EAAAA,KAAK,EAAE;AACLO,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAEjB,KAAK,CAACO,MAAN,CAAaE,KAFf;AAGLU,IAAAA,UAAU,EAAE;AAHP;AAbwB,CAAlB,CAAf;AAoBA,eAAerB,SAAf","sourcesContent":["import React from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\nimport { TextInput as Input } from 'react-native-paper'\nimport { theme } from '../core/theme'\n\nconst TextInput = ({ errorText, description, ...props }) => (\n  <View style={styles.container}>\n    <Input\n      style={styles.input}\n      selectionColor={theme.colors.primary}\n      underlineColor=\"transparent\"\n      mode=\"outlined\"\n      {...props}\n    />\n    {description && !errorText ? (\n      <Text style={styles.description}>{description}</Text>\n    ) : null}\n    {errorText ? <Text style={styles.error}>{errorText}</Text> : null}\n  </View>\n)\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n  },\n  description: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n    paddingTop: 8,\n  },\n  error: {\n    fontSize: 13,\n    color: theme.colors.error,\n    paddingTop: 8,\n  },\n})\n\nexport default TextInput\n"]},"metadata":{},"sourceType":"module"}