{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\matem\\\\Desktop\\\\login\\\\src\\\\screens\\\\chat.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GiftedChat, Bubble, Send, SystemMessage } from 'react-native-gifted-chat';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { IconButton } from 'react-native-paper';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport useStatsBar from \"../components/useStatusBar\";\nexport default function chat(_ref) {\n  var route = _ref.route;\n  useStatsBar('light-content');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var thread = route.params.thread;\n  var user = firebase.auth().currentUser;\n  var currentUser = user.toJSON();\n\n  function handleSend(messages) {\n    var text;\n    return _regeneratorRuntime.async(function handleSend$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            text = messages[0].text;\n            firebase.firestore().collection('THREADS').doc(thread._id).collection('MESSAGES').add({\n              text: text,\n              createdAt: new Date().getTime(),\n              user: {\n                _id: currentUser.uid,\n                email: currentUser.email\n              }\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('THREADS').doc(thread._id).set({\n              latestMessage: {\n                text: text,\n                createdAt: new Date().getTime()\n              }\n            }, {\n              merge: true\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    var messagesListener = firebase.firestore().collection('THREADS').doc(thread._id).collection('MESSAGES').orderBy('createdAt', 'desc').onSnapshot(function (querySnapshot) {\n      var messages = querySnapshot.docs.map(function (doc) {\n        var firebaseData = doc.data();\n\n        var data = _objectSpread({\n          _id: doc.id,\n          text: '',\n          createdAt: new Date().getTime()\n        }, firebaseData);\n\n        if (!firebaseData.system) {\n          data.user = _objectSpread(_objectSpread({}, firebaseData.user), {}, {\n            name: firebaseData.user.email\n          });\n        }\n\n        return data;\n      });\n      setMessages(messages);\n    });\n    return function () {\n      return messagesListener();\n    };\n  }, []);\n\n  function renderBubble(props) {\n    return React.createElement(Bubble, _extends({}, props, {\n      wrapperStyle: {\n        right: {\n          backgroundColor: '#6646ee'\n        }\n      },\n      textStyle: {\n        right: {\n          color: '#fff'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  function renderLoading() {\n    return React.createElement(View, {\n      style: styles.loadingContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#6646ee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function renderSend(props) {\n    return React.createElement(Send, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }), React.createElement(View, {\n      style: styles.sendingContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, React.createElement(IconButton, {\n      icon: \"send-circle\",\n      size: 32,\n      color: \"#6646ee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function scrollToBottomComponent() {\n    return React.createElement(View, {\n      style: styles.bottomComponentContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, React.createElement(IconButton, {\n      icon: \"chevron-double-down\",\n      size: 36,\n      color: \"#6646ee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function renderSystemMessage(props) {\n    return React.createElement(SystemMessage, _extends({}, props, {\n      wrapperStyle: styles.systemMessageWrapper,\n      textStyle: styles.systemMessageText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: handleSend,\n    user: {\n      _id: currentUser.uid\n    },\n    placeholder: \"Type your message here...\",\n    alwaysShowSend: true,\n    showUserAvatar: true,\n    scrollToBottom: true,\n    renderBubble: renderBubble,\n    renderLoading: renderLoading,\n    renderSend: renderSend,\n    scrollToBottomComponent: scrollToBottomComponent,\n    renderSystemMessage: renderSystemMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sendingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bottomComponentContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  systemMessageWrapper: {\n    backgroundColor: '#6646ee',\n    borderRadius: 4,\n    padding: 5\n  },\n  systemMessageText: {\n    fontSize: 14,\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/matem/Desktop/login/src/screens/chat.js"],"names":["React","useState","useContext","useEffect","GiftedChat","Bubble","Send","SystemMessage","IconButton","firebase","useStatsBar","chat","route","messages","setMessages","thread","params","user","auth","currentUser","toJSON","handleSend","text","firestore","collection","doc","_id","add","createdAt","Date","getTime","uid","email","set","latestMessage","merge","messagesListener","orderBy","onSnapshot","querySnapshot","docs","map","firebaseData","data","id","system","name","renderBubble","props","right","backgroundColor","color","renderLoading","styles","loadingContainer","renderSend","sendingContainer","scrollToBottomComponent","bottomComponentContainer","renderSystemMessage","systemMessageWrapper","systemMessageText","StyleSheet","create","flex","alignItems","justifyContent","borderRadius","padding","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  GiftedChat,\r\n  Bubble,\r\n  Send,\r\n  SystemMessage\r\n} from 'react-native-gifted-chat';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n\r\nimport useStatsBar from '../components/useStatusBar';\r\n\r\nexport default function chat({ route }) {\r\n  useStatsBar('light-content');\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const { thread } = route.params;\r\n  const  user  = firebase.auth().currentUser;\r\n  const currentUser = user.toJSON();\r\n\r\n  async function handleSend(messages) {\r\n    const text = messages[0].text;\r\n\r\n    firebase.firestore()\r\n      .collection('THREADS')\r\n      .doc(thread._id)\r\n      .collection('MESSAGES')\r\n      .add({\r\n        text,\r\n        createdAt: new Date().getTime(),\r\n        user: {\r\n          _id: currentUser.uid,\r\n          email: currentUser.email\r\n        }\r\n      });\r\n\r\n    await firebase.firestore()\r\n      .collection('THREADS')\r\n      .doc(thread._id)\r\n      .set(\r\n        {\r\n          latestMessage: {\r\n            text,\r\n            createdAt: new Date().getTime()\r\n          }\r\n        },\r\n        { merge: true }\r\n      );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const messagesListener = firebase.firestore()\r\n      .collection('THREADS')\r\n      .doc(thread._id)\r\n      .collection('MESSAGES')\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot(querySnapshot => {\r\n        const messages = querySnapshot.docs.map(doc => {\r\n          const firebaseData = doc.data();\r\n\r\n          const data = {\r\n            _id: doc.id,\r\n            text: '',\r\n            createdAt: new Date().getTime(),\r\n            ...firebaseData\r\n          };\r\n\r\n          if (!firebaseData.system) {\r\n            data.user = {\r\n              ...firebaseData.user,\r\n              name: firebaseData.user.email\r\n            };\r\n          }\r\n\r\n          return data;\r\n        });\r\n\r\n        setMessages(messages);\r\n      });\r\n\r\n    // Stop listening for updates whenever the component unmounts\r\n    return () => messagesListener();\r\n  }, []);\r\n\r\n  function renderBubble(props) {\r\n    return (\r\n      <Bubble\r\n        {...props}\r\n        wrapperStyle={{\r\n          right: {\r\n            backgroundColor: '#6646ee'\r\n          }\r\n        }}\r\n        textStyle={{\r\n          right: {\r\n            color: '#fff'\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderLoading() {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size='large' color='#6646ee' />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  function renderSend(props) {\r\n    return (\r\n      <Send {...props}>\r\n        <View style={styles.sendingContainer}>\r\n          <IconButton icon='send-circle' size={32} color='#6646ee' />\r\n        </View>\r\n      </Send>\r\n    );\r\n  }\r\n\r\n  function scrollToBottomComponent() {\r\n    return (\r\n      <View style={styles.bottomComponentContainer}>\r\n        <IconButton icon='chevron-double-down' size={36} color='#6646ee' />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  function renderSystemMessage(props) {\r\n    return (\r\n      <SystemMessage\r\n        {...props}\r\n        wrapperStyle={styles.systemMessageWrapper}\r\n        textStyle={styles.systemMessageText}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GiftedChat\r\n      messages={messages}\r\n      onSend={handleSend}\r\n      user={{ _id: currentUser.uid }}\r\n      placeholder='Type your message here...'\r\n      alwaysShowSend\r\n      showUserAvatar\r\n      scrollToBottom\r\n      renderBubble={renderBubble}\r\n      renderLoading={renderLoading}\r\n      renderSend={renderSend}\r\n      scrollToBottomComponent={scrollToBottomComponent}\r\n      renderSystemMessage={renderSystemMessage}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  sendingContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  bottomComponentContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  systemMessageWrapper: {\r\n    backgroundColor: '#6646ee',\r\n    borderRadius: 4,\r\n    padding: 5\r\n  },\r\n  systemMessageText: {\r\n    fontSize: 14,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}